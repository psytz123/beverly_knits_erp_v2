# Beverly Knits ERP - Optimized Production Dockerfile
# Multi-stage build with modular services and performance optimization

# Stage 1: Builder
FROM python:3.11-slim as builder

# Build arguments
ARG BUILD_DATE
ARG VERSION=4.0.0

# Install build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    gcc \
    g++ \
    libpq-dev \
    && rm -rf /var/lib/apt/lists/*

# Create virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Copy and install requirements
WORKDIR /build
COPY requirements.txt requirements-prod.txt ./
RUN pip install --no-cache-dir --upgrade pip setuptools wheel && \
    pip install --no-cache-dir -r requirements-prod.txt

# Stage 2: Runtime
FROM python:3.11-slim

# Metadata
LABEL maintainer="Beverly Knits ERP Team" \
      version="4.0.0" \
      description="Optimized modular ERP with memory management"

# Environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONPATH=/app \
    PORT=5005 \
    WORKERS=4 \
    ENABLE_OPTIMIZATION=true \
    MEMORY_LIMIT_MB=500 \
    CACHE_TTL=300

# Install runtime dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    libpq5 \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN groupadd -r bkiuser && useradd -r -g bkiuser -u 1000 bkiuser

# Copy virtual environment from builder
COPY --from=builder /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Create application directories
RUN mkdir -p /app /data /logs /cache && \
    chown -R bkiuser:bkiuser /app /data /logs /cache

WORKDIR /app

# Copy application code
COPY --chown=bkiuser:bkiuser beverly_comprehensive_erp.py ./
COPY --chown=bkiuser:bkiuser services/ ./services/
COPY --chown=bkiuser:bkiuser optimization/ ./optimization/
COPY --chown=bkiuser:bkiuser consolidated_dashboard.html ./
COPY --chown=bkiuser:bkiuser static/ ./static/
COPY --chown=bkiuser:bkiuser templates/ ./templates/

# Create startup script
RUN echo '#!/bin/bash\n\
echo "Starting Beverly Knits ERP..."\n\
echo "Memory Limit: ${MEMORY_LIMIT_MB}MB"\n\
echo "Cache TTL: ${CACHE_TTL}s"\n\
echo "Workers: ${WORKERS}"\n\
echo "Optimization: ${ENABLE_OPTIMIZATION}"\n\
python beverly_comprehensive_erp.py' > /app/start.sh && \
chmod +x /app/start.sh && \
chown bkiuser:bkiuser /app/start.sh

# Switch to non-root user
USER bkiuser

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:${PORT}/api/health || exit 1

# Expose port
EXPOSE 5005

# Start command
CMD ["/app/start.sh"]