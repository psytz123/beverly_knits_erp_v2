version: '3.8'

services:
  # Main ERP Application
  bki-erp:
    build:
      context: .
      dockerfile: Dockerfile.optimized
      args:
        BUILD_DATE: ${BUILD_DATE:-$(date -u +'%Y-%m-%dT%H:%M:%SZ')}
        VERSION: 4.0.0
    image: beverlyknits/erp:4.0.0
    container_name: bki-erp
    restart: unless-stopped
    ports:
      - "5006:5006"
    environment:
      - PORT=5006
      - WORKERS=4
      - ENABLE_OPTIMIZATION=true
      - MEMORY_LIMIT_MB=500
      - CACHE_TTL=300
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=beverlyknits
      - POSTGRES_USER=${POSTGRES_USER:-bkiuser}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-secure_password}
    volumes:
      - ./data:/data
      - ./logs:/logs
      - erp-cache:/cache
    depends_on:
      - postgres
      - redis
    networks:
      - bki-network
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 512M
        reservations:
          cpus: '1'
          memory: 256M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5006/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: bki-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=beverlyknits
      - POSTGRES_USER=${POSTGRES_USER:-bkiuser}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-secure_password}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - bki-network
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bkiuser -d beverlyknits"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: bki-redis
    restart: unless-stopped
    command: redis-server --maxmemory 256mb --maxmemory-policy lru
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - bki-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Load Balancer
  nginx:
    image: nginx:alpine
    container_name: bki-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx-cache:/var/cache/nginx
    depends_on:
      - bki-erp
    networks:
      - bki-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 128M
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Prometheus Metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: bki-prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    networks:
      - bki-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

  # Grafana Dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: bki-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_INSTALL_PLUGINS=redis-datasource
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    depends_on:
      - prometheus
    networks:
      - bki-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

# Networks
networks:
  bki-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Volumes
volumes:
  postgres-data:
  redis-data:
  erp-cache:
  nginx-cache:
  prometheus-data:
  grafana-data: